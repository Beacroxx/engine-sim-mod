private import "engine_sim.mr"

units units()
label cycle(2 * 360 * units.deg)

public node chevy_bbc_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 5500 * units.rpm;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit)
            .connect_wire(wires.wire1, (0.0 / 8.0) * cycle)
            .connect_wire(wires.wire8, (1.0 / 8.0) * cycle)
            .connect_wire(wires.wire4, (2.0 / 8.0) * cycle)
            .connect_wire(wires.wire3, (3.0 / 8.0) * cycle)
            .connect_wire(wires.wire6, (4.0 / 8.0) * cycle)
            .connect_wire(wires.wire5, (5.0 / 8.0) * cycle)
            .connect_wire(wires.wire7, (6.0 / 8.0) * cycle)
            .connect_wire(wires.wire2, (7.0 / 8.0) * cycle);
}

public node chevy_sbc_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 5500 * units.rpm;
    alias output __out: chevy_bbc_distributor(
        wires: wires,
        timing_curve: timing_curve,
        rev_limit: rev_limit
    );
}

public node vtwin90_distributor {
    input wires;
    input timing_curve;
    input rev_limit: 5500 * units.rpm;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit)
            .connect_wire(wires.wire1, (0.0 / 8.0) * cycle)
            .connect_wire(wires.wire2, (3.0 / 8.0) * cycle);
}
