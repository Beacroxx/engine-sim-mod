private node ExplicitDefault {
    input object;
    output object_default: object.hello_world; 
    output object_default_pointer: object.hello_world;
    output object_reference: object;
}

private node HelloWorldNode {
    output hello_world: "Hello World";
}

private node HelloWorldContainer {
    output hello_world: HelloWorldNode();
}

private node float => some_builtin_float_class {
    input __in;
}

private node vector2d => some_builtin_vector_class {
    input __in_x: 0.0;
    input __in_y: 0.0;

    output x [float];
    output y [::float];
}

private node dual_vector {
    output output1: vector2d(0, 1);
    output output2: vector2d(1, 2);
}

private node confusion {
    output output1: local;
    output output2: 1.0;
    output vector_test: local_vector.x;

    dual_vector local()
    vector2d local_vector()
}

private node container {
    output output1: dual_vector();
    output output2: confusion();
}

container test_container()

private node test {
    output test1: container.output1.output1.x;  // UnresolvedReference
    output test2: container.output1.x;          // UnresolvedReference
    output test3: container.output1.z;          // UnresolvedReference

    output test4: test_container.output1.output1.x;     // Okay
    output test5: test_container.output1.x;             // UndefinedMember
    output test6: test_container.output1.z;             // UndefinedMember

    output test7: internal_container.output1.output1.x;         // Okay
    output test8: internal_container.output1.output1.x;         // Okay
    output test9: internal_container.output1.z;                 // UndefinedMember

    output test16: hello_world_default.hello_world;                     // UndefinedMember
    output test17: hello_world_default.object_default.hello_world;      // Okay
    output test19: hello_world_default.object_reference.hello_world;    // Okay
    output test20: hello_world_default.object_reference.hello_world;    // Okay
    output test21: hello_world_default.object_reference.hello_world;    // Okay
    output test22: hello_world_default.object_reference.fake;           // UndefinedMember

    container internal_container()
    HelloWorldContainer hello_world()
    ExplicitDefault hello_world_default(hello_world)
}

test test()

public node int_channel => __piranha__int {}
public node literal_int => __piranha__literal_int {
    alias output __out [int_channel];
}

public node float_channel => __piranha__float {}
public node literal_float => __piranha__literal_float {
    alias output __out [float_channel];
}

public node string_channel => __piranha__string {}
public node literal_string => __piranha__literal_string {
    alias output __out [string_channel];
}
